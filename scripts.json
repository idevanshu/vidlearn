[{"id": "segment_001", "voice_script": "Binary search is an efficient algorithm for finding an item from a sorted list of items.", "animation": "Display a horizontal list of numbers arranged in increasing order on a black background.", "duration": 3}, {"id": "segment_002", "voice_script": "The algorithm works by repeatedly dividing the list in half.", "animation": "Show the list being visually split into two halves with a dividing line.", "duration": 4}, {"id": "segment_003", "voice_script": "It checks whether the middle element of the list is the target number.", "animation": "Highlight the middle element of the list and draw emphasis, like a circle around it.", "duration": 4}, {"id": "segment_004", "voice_script": "If the middle element is the target, the search is complete.", "animation": "Show the middle element changing color to green, representing successful find.", "duration": 3}, {"id": "segment_005", "voice_script": "If the target is smaller than the middle element, the search continues on the left half.", "animation": "Highlight the left half of the list and fade out the right half to indicate narrowing the search.", "duration": 5}, {"id": "segment_006", "voice_script": "Conversely, if the target is larger, the search continues on the right half.", "animation": "Highlight the right half of the list and fade out the left half to indicate narrowing the search.", "duration": 5}, {"id": "segment_007", "voice_script": "This process repeats until the target is found, or the list cannot be divided further.", "animation": "Show repeated halving of the list, zooming into smaller sections until the element is found or list is empty.", "duration": 5}, {"id": "segment_008", "voice_script": "Binary search efficiently reduces the search space, making it faster than a linear search.", "animation": "Show a quick comparison with a long linear search path and a short binary search path, highlighting speed and efficiency.", "duration": 4}]