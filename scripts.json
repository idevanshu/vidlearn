[{"id": "segment_001", "voice_script": "A red-black tree is a balanced binary search tree with specific properties to maintain efficient operations.", "animation": "Show a binary tree structure, highlighting two paths with different colors ending in the same depth to illustrate balance.", "duration": 5}, {"id": "segment_002", "voice_script": "Each node in a red-black tree has a color attribute, either red or black.", "animation": "Show a series of tree nodes, alternately coloring them red and black as they appear.", "duration": 4}, {"id": "segment_003", "voice_script": "The root of the tree is always black.", "animation": "Display a tree with the topmost node clearly marked as black, with an arrow and label pointing to it saying 'Root'.", "duration": 3}, {"id": "segment_004", "voice_script": "Every leaf node, which is a null placeholder, is also black.", "animation": "Highlight the leaf nodes at the ends of branches in the tree, marking them as black boxes or circles.", "duration": 4}, {"id": "segment_005", "voice_script": "If a node is red, then both its children must be black, ensuring no two red nodes are adjacent.", "animation": "Show a red node with its two children nodes clearly marked in black below it.", "duration": 5}, {"id": "segment_006", "voice_script": "Every path from a node to its descendant leaf nodes must have the same number of black nodes, maintaining a balanced tree structure.", "animation": "Trace two paths from the root to leaves, counting black nodes and displaying equal numbers at each endpoint.", "duration": 5}, {"id": "segment_007", "voice_script": "These rules ensure that the tree remains approximately balanced, allowing for operations like insertion and search to run in logarithmic time.", "animation": "Illustrate a stopwatch and a sequence of node operations, showing a logarithm symbol above to indicate efficiency.", "duration": 6}]